pipeline {
  agent any
  stages {
    stage('install dependency frontend') {
      steps {
        sh 'make install_dependency_frontend'
      }
    }
    stage('code analysis') {
      steps {
        sh 'make code_analys_frontend' 
        sh 'make code_analys_backend' 
      }
    }
    stage('run unit test') {
      steps {
        sh 'make run_unittest_frontend'
        sh 'make run_unittest_backend'
      }
    }
    stage('run integration test') {
      steps {
        sh 'make run_integratetest_backend'
      }

      post {

      }
    }
    
    stage('build') {
      steps {
        sh 'make build_frontend'
        sh 'make build_backend'
      }
    }
    stage('run ATDD') {
      steps {
        sh 'make start_service'
        sh 'make run_robot'
        sh 'make run_newman'
        sh 'make stop_service'
      }
    }
    
  }
  post { 
    always { 
      sh "make stop_service"
      sh "docker volume prune -f"
    }

    success {	
      slackSend (color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")	
    }	
    failure {	
      slackSend (color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")	
    }	
  }
}
